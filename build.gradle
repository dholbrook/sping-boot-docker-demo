buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "org.flywaydb:flyway-gradle-plugin:3.2.1"
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'org.flywaydb.flyway'

group = 'com.example'
version = '0.1.0'

jar {
    baseName = 'spring-boot-docker-example'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    //exclude tomcat, using undertow
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.mybatis:mybatis:3.3.0")
    compile 'org.mybatis:mybatis-spring:1.2.3'
    compile 'mysql:mysql-connector-java:5.1.35'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

task buildDocker(type: Docker, dependsOn: build) {
    //only build image locally
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
            //normalize the name so the Dockerfile will work regardless of version
            rename '(.+).jar', 'app.jar'
        }
    }
}

flyway {
    user = 'task'
    password = 'taskpwd'
    schemas = ['task']
    url = 'jdbc:mysql://192.168.59.103/task'
}